#include <stdio.h> 
#define MAX 100 
 
int adj[MAX][MAX]; 
int visited[MAX]; 
int stack[MAX]; 
int top = -1; 
int n; 
 
void push(int v) { 
    stack[++top] = v; 
} 
 
int pop() { 
    if (top == -1) 
        return -1; 
    return stack[top--]; 
} 
 
int isStackEmpty() { 
    return top == -1; 
} 
 
void DFS(int start) { 
    int i, v; 
    push(start); 
 
    while (!isStackEmpty()) { 
        v = pop(); 
 
        if (!visited[v]) { 
            printf("%d ", v); 
            visited[v] = 1; 
        } 

        for (i = n - 1; i >= 0; i--) { 
            if (adj[v][i] == 1 && visited[i] == 0) { 
                push(i); 
            } 
        } 
    } 
} 
 
int main() { 
    int i, j, start; 
 
    printf("Enter number of vertices: "); 
    scanf("%d", &n); 
 
    printf("Enter adjacency matrix:\n"); 
    for (i = 0; i < n; i++) { 
        for (j = 0; j < n; j++) { 
            scanf("%d", &adj[i][j]); 
        } 
    } 
 
    for (i = 0; i < n; i++) 
        visited[i] = 0; 
 
    printf("Enter starting vertex (0 to %d): ", n - 1); 
    scanf("%d", &start); 
 
    printf("DFS Traversal : "); 
    DFS(start); 
 
    printf("\n"); 
    return 0; 
}
